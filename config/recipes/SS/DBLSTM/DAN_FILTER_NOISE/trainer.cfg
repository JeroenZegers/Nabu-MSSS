[trainer]
#The type of trainer: single task or multi task
trainer = multi_task
#state the tasks
tasks = task
#a space separated list of different semgent lengths that will be used. Expecting 'full' to be the last one.
#Normally a network for a specific segment length is initliazed with the network of the previous segment length
#should be specified in tasks?
segment_lengths = 100 full
#number of passes over the entire database
num_epochs = 30
#initial learning rate of the neural net
initial_learning_rate = 1e-3 5e-4
#exponential weight decay parameter
learning_rate_decay = 1
#cliping value for gradients
clip_grad_value = 20000000
#normalize gradients?
normalize_gradients = True
#a space separated list of size of the minibatch (#utterances), depending on the segment length
batch_size = 40 6
#a  pace separated list of number of minibatches to aggregate before updating the parameters,
#depending on the segment length. if 0 asstnchronous training will be done
numbatches_to_aggregate = 20 17
#the data will be divided into buckets according to sequence length, this
#setting determines the number of buckets to use. For no bucketing set to 1
numbuckets = 1

###VALIDATION PART###
#frequency of evaluating the validation set.
valid_frequency = 50
#if you want to adapt the learning rate based on the validation set, set to True
valid_adapt = False
#if you want to go back in training if validation performance is worse set to True
go_back = False
#the number of times validation performance can be worse before terminating training, set to None to disable early stopping
num_tries = 3
#set to True if you want to reset the number of tries if the validation performance is better
reset_tries = True

[task]
#type of loss that should be used
loss_type = deepattractornet_noisefilter
inputs = features noisespectrogram
outputs = emb_vec alpha
nodes = n0 alpha reconstruct_layer n1 emb_vec

n0_model = main_noise
n0_inputs = features

alpha_model = noisefilter
alpha_inputs = n0

reconstruct_layer_model = reconstruct
reconstruct_layer_inputs = noisespectrogram alpha

n1_model = main_seperate
n1_inputs = reconstruct_layer

emb_vec_model = outlayer
emb_vec_inputs = n1

features = trainspec
noisespectrogram = trainmixtomask
targets = partitioning spectrogram_targets mix_to_mask
partitioning = trainpartitiontargets
spectrogram_targets = trainspectrogramtargets
mix_to_mask = trainmixtomask
