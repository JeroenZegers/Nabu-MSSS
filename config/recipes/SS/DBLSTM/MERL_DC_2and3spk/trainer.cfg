[trainer]
#The type of trainer: single task or multi task
trainer = multi_task
#The type of multi task training: single_1to1, single_1tomany, multiple_1to1
multi_trainer = single_1to1
#state the tasks
tasks = task_2spk task_3spk
#if set to True training will resume from latest checkpoint
resume_training = True
#a space separated list of different semgent lengths that will be used. Expecting 'full' to be the last one.
#Normally a network for a specific segment length is initliazed with the network of the previous segment length
#should be specified in tasks?
segment_lengths = 100 full
#number of passes over the entire database
num_epochs = 30
#initial learning rate of the neural net
initial_learning_rate = 1e-3 5e-4
#exponential weight decay parameter
learning_rate_decay = 1
#cliping value for gradients
clip_grad_value = 20000000
#normalize gradients?
normalize_gradients = True
#a space separated list of size of the minibatch (#utterances), depending on the segment length
batch_size = 20 3
#a  pace separated list of number of minibatches to aggregate before updating the parameters, 
#depending on the segment length. if 0 asstnchronous training will be done
numbatches_to_aggregate = 20 17
#the data will be divided into buckets according to sequence length, this
#setting determines the number of buckets to use. For no bucketing set to 1
numbuckets = 1

###VALIDATION PART###
#frequency of evaluating the validation set.
valid_frequency = 50
#if you want to adapt the learning rate based on the validation set, set to True
valid_adapt = False
#if you want to go back in training if validation performance is worse set to True
go_back = False
#the number of times validation performance can be worse before terminating training, set to None to disable early stopping
num_tries = 3
#set to True if you want to reset the number of tries if the validation performance is better
reset_tries = True

[task_2spk]
#type of loss that should be used
loss_type = deepclustering
#link the input names defined in the classifier config to sections defined in
#the database config
features = trainspec
#a space seperated list of target names used by the trainer
targets = binary_targets usedbins 
#a mapping between the target names and database sections
binary_targets = traintargets 
#a mapping between the target names and database sections
usedbins = trainusedbins

[task_3spk]
#type of loss that should be used
loss_type = deepclustering
#link the input names defined in the classifier config to sections defined in
#the database config
features = trainspec3spk
#a space seperated list of target names used by the trainer
targets = binary_targets usedbins 
#a mapping between the target names and database sections
binary_targets = traintargets3spk 
#a mapping between the target names and database sections
usedbins = trainusedbins3spk