[hyper]
model_names = main outlayer noisedetectlayer

[main]
#type of architecture
architecture = dblstm
#number of neurons in the hidden layers
num_units = 800
#number of hidden layers
num_layers = 4
#input noise standart deviation
input_noise = 0.2
#dropout rate (keep probability)
dropout = 1.0
#the recurrent dropout rate (keep probability)
recurrent_dropout = 1.0
#wheter layer normalization should be applied
layer_norm = False

[relulayer]
architecture = RELU
output_dims = 400
num_layers = 2
dropout = 1.0

[outlayer]
#type of architecture
architecture = linear
#the number of output dims (should be set automaticaly?)
output_dims = 2580
#input noise standart deviation
input_noise = 0
#dropout rate (keep probability)
dropout = 1.0

[noisedetectlayer]
#type of architecture
architecture = sigmoid
#the number of output dims (should be set automaticaly?)
output_dims = 129
#input noise standart deviation
input_noise = 0
#dropout rate (keep probability)
dropout = 1.0
